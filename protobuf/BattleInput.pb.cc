// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BattleInput.proto

#include "BattleInput.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class BattleInputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BattleInput>
      _instance;
} _BattleInput_default_instance_;
namespace protobuf_BattleInput_2eproto {
void InitDefaultsBattleInputImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_BattleInput_default_instance_;
    new (ptr) ::BattleInput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BattleInput::InitAsDefaultInstance();
}

void InitDefaultsBattleInput() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBattleInputImpl);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BattleInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BattleInput, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BattleInput, movedirectionx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BattleInput, movedirectiony_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BattleInput, attacktype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BattleInput, attackdirectionx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BattleInput, attackdirectiony_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::BattleInput)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_BattleInput_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "BattleInput.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021BattleInput.proto\"\222\001\n\013BattleInput\022\013\n\003u"
      "id\030\001 \001(\005\022\026\n\016moveDirectionX\030\002 \001(\005\022\026\n\016move"
      "DirectionY\030\003 \001(\005\022\022\n\nattackType\030\004 \001(\005\022\030\n\020"
      "attackDirectionX\030\005 \001(\005\022\030\n\020attackDirectio"
      "nY\030\006 \001(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 176);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "BattleInput.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_BattleInput_2eproto

// ===================================================================

void BattleInput::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BattleInput::kUidFieldNumber;
const int BattleInput::kMoveDirectionXFieldNumber;
const int BattleInput::kMoveDirectionYFieldNumber;
const int BattleInput::kAttackTypeFieldNumber;
const int BattleInput::kAttackDirectionXFieldNumber;
const int BattleInput::kAttackDirectionYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BattleInput::BattleInput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_BattleInput_2eproto::InitDefaultsBattleInput();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BattleInput)
}
BattleInput::BattleInput(const BattleInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&attackdirectiony_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(attackdirectiony_));
  // @@protoc_insertion_point(copy_constructor:BattleInput)
}

void BattleInput::SharedCtor() {
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&attackdirectiony_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(attackdirectiony_));
  _cached_size_ = 0;
}

BattleInput::~BattleInput() {
  // @@protoc_insertion_point(destructor:BattleInput)
  SharedDtor();
}

void BattleInput::SharedDtor() {
}

void BattleInput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BattleInput::descriptor() {
  ::protobuf_BattleInput_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_BattleInput_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BattleInput& BattleInput::default_instance() {
  ::protobuf_BattleInput_2eproto::InitDefaultsBattleInput();
  return *internal_default_instance();
}

BattleInput* BattleInput::New(::google::protobuf::Arena* arena) const {
  BattleInput* n = new BattleInput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BattleInput::Clear() {
// @@protoc_insertion_point(message_clear_start:BattleInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&attackdirectiony_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(attackdirectiony_));
  _internal_metadata_.Clear();
}

bool BattleInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BattleInput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 moveDirectionX = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &movedirectionx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 moveDirectionY = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &movedirectiony_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 attackType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attacktype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 attackDirectionX = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attackdirectionx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 attackDirectionY = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attackdirectiony_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BattleInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BattleInput)
  return false;
#undef DO_
}

void BattleInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BattleInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->uid(), output);
  }

  // int32 moveDirectionX = 2;
  if (this->movedirectionx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->movedirectionx(), output);
  }

  // int32 moveDirectionY = 3;
  if (this->movedirectiony() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->movedirectiony(), output);
  }

  // int32 attackType = 4;
  if (this->attacktype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->attacktype(), output);
  }

  // int32 attackDirectionX = 5;
  if (this->attackdirectionx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->attackdirectionx(), output);
  }

  // int32 attackDirectionY = 6;
  if (this->attackdirectiony() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->attackdirectiony(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BattleInput)
}

::google::protobuf::uint8* BattleInput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BattleInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->uid(), target);
  }

  // int32 moveDirectionX = 2;
  if (this->movedirectionx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->movedirectionx(), target);
  }

  // int32 moveDirectionY = 3;
  if (this->movedirectiony() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->movedirectiony(), target);
  }

  // int32 attackType = 4;
  if (this->attacktype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->attacktype(), target);
  }

  // int32 attackDirectionX = 5;
  if (this->attackdirectionx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->attackdirectionx(), target);
  }

  // int32 attackDirectionY = 6;
  if (this->attackdirectiony() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->attackdirectiony(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BattleInput)
  return target;
}

size_t BattleInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BattleInput)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());
  }

  // int32 moveDirectionX = 2;
  if (this->movedirectionx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->movedirectionx());
  }

  // int32 moveDirectionY = 3;
  if (this->movedirectiony() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->movedirectiony());
  }

  // int32 attackType = 4;
  if (this->attacktype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->attacktype());
  }

  // int32 attackDirectionX = 5;
  if (this->attackdirectionx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->attackdirectionx());
  }

  // int32 attackDirectionY = 6;
  if (this->attackdirectiony() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->attackdirectiony());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BattleInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BattleInput)
  GOOGLE_DCHECK_NE(&from, this);
  const BattleInput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BattleInput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BattleInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BattleInput)
    MergeFrom(*source);
  }
}

void BattleInput::MergeFrom(const BattleInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BattleInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.movedirectionx() != 0) {
    set_movedirectionx(from.movedirectionx());
  }
  if (from.movedirectiony() != 0) {
    set_movedirectiony(from.movedirectiony());
  }
  if (from.attacktype() != 0) {
    set_attacktype(from.attacktype());
  }
  if (from.attackdirectionx() != 0) {
    set_attackdirectionx(from.attackdirectionx());
  }
  if (from.attackdirectiony() != 0) {
    set_attackdirectiony(from.attackdirectiony());
  }
}

void BattleInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BattleInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BattleInput::CopyFrom(const BattleInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BattleInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BattleInput::IsInitialized() const {
  return true;
}

void BattleInput::Swap(BattleInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BattleInput::InternalSwap(BattleInput* other) {
  using std::swap;
  swap(uid_, other->uid_);
  swap(movedirectionx_, other->movedirectionx_);
  swap(movedirectiony_, other->movedirectiony_);
  swap(attacktype_, other->attacktype_);
  swap(attackdirectionx_, other->attackdirectionx_);
  swap(attackdirectiony_, other->attackdirectiony_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BattleInput::GetMetadata() const {
  protobuf_BattleInput_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_BattleInput_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
